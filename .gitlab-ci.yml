stages:
  - build
  - test
  - deploy

.elixir:
  image: elixir:1.12.0
  cache:
    paths:
      - _build
      - deps

compile:
  stage: build
  extends: ".elixir"
  script:
    - mix local.hex --force
    - mix local.rebar --force
    - mix deps.get
    - mix compile --warnings-as-errors

test:
  stage: test
  extends: ".elixir"
  services:
    - postgres:13.2-alpine
  variables:
    POSTGRES_DB: xray_test
    POSTGRES_HOST: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: "postgres"
    MIX_ENV: "test"
  before_script:
    - apt-get update
    - apt-get install -y curl
    - curl -fsSL https://deb.nodesource.com/setup_14.x | bash -
    - apt-get install -y nodejs
    - npm install --global prettier
    - mix local.hex --force
    - mix local.rebar --force
    - mix ecto.setup
  script:
    - mix coveralls.json
    - bash <(curl -s https://codecov.io/bash)

lint:
  stage: test
  extends: ".elixir"
  variables:
    MIX_ENV: "test"
  script:
    - mix local.hex --force
    - mix local.rebar --force
    - mix format --check-formatted
    - mix credo --strict
    - mix sobelow --config --private

deploy_production:
  stage: deploy
  image: dokku/ci-docker-image
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  environment:
    name: production
  variables:
    GIT_REMOTE_URL: ssh://dokku@xray.computer:22/xray
    GIT_PUSH_FLAGS: "--force"
    BRANCH: main
    GIT_DEPTH: 0
  script: dokku-deploy
  after_script: [dokku-unlock]
